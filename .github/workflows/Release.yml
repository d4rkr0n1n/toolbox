name: Release
on:
  push:
    branches: [ "dev" , "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        if: ${{ github.ref_name == 'dev' }}
        id: extract_version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          extracted_digit=$(echo "$latest_tag" | awk -F'[v.]' '{print $2}')
          echo "$extracted_digit"
          echo "version=v$extracted_digit.`expr ${{ github.run_number }} / 10`.`expr ${{ github.run_number }} % 10`" >> $GITHUB_OUTPUT
      - name: Get Tags
        if: ${{ github.ref_name == 'main' }}
        id: tags
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          extracted_digit=$(echo "$latest_tag" | awk -F'[v.]' '{print $2}')
          echo "$extracted_digit"
          new_version=$(($extracted_digit+1))
          echo "version=v$new_version.`expr ${{ github.run_number }} / 10`.`expr ${{ github.run_number }} % 10`" >> $GITHUB_OUTPUT
      - name: Create Release
        if: ${{ github.ref_name == 'dev' }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
      - name: Create Release
        if: ${{ github.ref_name == 'main' }}
        id: create_release-1
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tags.outputs.version }}
          release_name: Release ${{ steps.tags.outputs.version }}
          draft: false
          prerelease: false
